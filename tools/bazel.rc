# Make TypeScript compilation fast, by keeping a few copies of the compiler
# running as daemons, and cache SourceFile AST's to reduce parse time.
build --strategy=TypeScriptCompile=worker

# Don't create bazel-* symlinks in the WORKSPACE directory.
# These require .gitignore and may scare users.
# Also, it's a workaround for https://github.com/bazelbuild/rules_typescript/issues/12
# which affects the common case of having `tsconfig.json` in the WORKSPACE directory.
#
# Instead, you should run `bazel info bazel-bin` to find out where the outputs went.
build --symlink_prefix=dist/

test --test_output=errors

# Workaround https://github.com/bazelbuild/bazel/issues/3645
# Limit Bazel to consuming 3072K of RAM
build:ci --local_resources=3072,2.0,1.0

build:ci --noshow_progress

# Write to cache
build --experimental_remote_spawn_cache
build --remote_http_cache=http://localhost:9999/cache

run --experimental_remote_spawn_cache
run --remote_http_cache=http://localhost:9999/cache

# Only read from cache
#build --spawn_strategy=remote --genrule_strategy=remote
#build --strategy=Javac=remote --strategy=Closure=remote
#build --remote_http_cache=http://localhost:9999/cache
#build --remote_upload_local_results=false

#run --spawn_strategy=remote --genrule_strategy=remote
#run --strategy=Javac=remote --strategy=Closure=remote
#run --remote_http_cache=http://localhost:9999/cache
#run --remote_upload_local_results=false